@page "/counter"
@inject HttpClient httpClient;

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@if(productList != null && productList.Count != 0)
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <td>Name</td>
                <td>Code</td>
                <td>Price</td>
                <td>Delet</td>
            </tr>
        </thead>
        <tbody>
            @foreach(Product product in productList)
            {
                <tr>
                    <td>@product.ProductName</td>
                    <td>@product.ProductCode</td>
                    <td>@product.ProductPrice</td>
                    <td>
                        <button @onclick="async () => {await DeleteProduct(product.ProductCode);}">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}else
{
    <span style="color:red;font-weight:600">No Products to display</span>
}

<br />
<br />
    <input @bind="product.ProductName" placeholder="Name"/>
    <input @bind="product.ProductCode" placeholder="Code"/>
    <input @bind="product.ProductPrice" placeholder="Price"/>
<br />
<br />
<button @onclick="AddProduct">Add Product</button>

@code {
    private int currentCount = 0;

    //API Calls
    private List<Product>? productList;
    private Product product = new();

    protected override async Task OnInitializedAsync()
    {
        productList = await httpClient.GetFromJsonAsync<List<Product>>("api/Products/GetProducts");
        await base.OnInitializedAsync();
    }

    private async Task DeleteProduct(string productCode)
    {
        await httpClient.DeleteAsync($"api/Products/DeleteProduct?productCode={productCode}");
        productList = await httpClient.GetFromJsonAsync<List<Product>>("api/Products/GetProducts");
    }

    private async Task AddProduct()
    {
        await httpClient.PostAsJsonAsync<Product>("api/products/AddProduct", product);
        productList = await httpClient.GetFromJsonAsync<List<Product>>("api/products/GetProducts");
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}
